{"ast":null,"code":"import _objectSpread from\"/Users/damnitstiff/Desktop/coding/twelve/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/damnitstiff/Desktop/coding/twelve/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import react dependencies\nimport React,{useEffect,useState}from'react';import{Link,useParams}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';// import apollo dependency\nimport{useQuery}from'@apollo/client';// import utils dependencies\nimport{REMOVE_FROM_CART,UPDATE_CART_QUANTITY,ADD_TO_CART,UPDATE_PRODUCTS}from'../utils/actions';import{QUERY_PRODUCTS}from'../utils/queries';import{idbPromise}from'../utils/helpers';// import component\nimport Cart from'../components/Cart';// import assset\nimport spinner from'../assets/spinner.gif';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Detail(){var dispatch=useDispatch();var state=useSelector(function(state){return state;});var _useParams=useParams(),id=_useParams.id;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),currentProduct=_useState2[0],setCurrentProduct=_useState2[1];var products=state.products,cart=state.cart;var _useQuery=useQuery(QUERY_PRODUCTS),loading=_useQuery.loading,data=_useQuery.data;// if data, loading, or dispatch is updated, update products\nuseEffect(function(){// already in global store\nif(products.length){setCurrentProduct(products.find(function(product){return product._id===id;}));}// retrieved from server\nelse if(data){dispatch({type:UPDATE_PRODUCTS,products:data.products});data.products.forEach(function(product){idbPromise('products','put',product);});}// get cache from idb\nelse if(!loading){idbPromise('products','get').then(function(indexedProducts){dispatch({type:UPDATE_PRODUCTS,products:indexedProducts});});}},[products,data,loading,dispatch,id]);// update cart quantity if itemInCart exists; otherwise add to cart \nvar addToCart=function addToCart(){var itemInCart=cart.find(function(cartItem){return cartItem._id===id;});if(itemInCart){dispatch({type:UPDATE_CART_QUANTITY,_id:id,purchaseQuantity:parseInt(itemInCart.purchaseQuantity)+1});idbPromise('cart','put',_objectSpread(_objectSpread({},itemInCart),{},{purchaseQuantity:parseInt(itemInCart.purchaseQuantity)+1}));}else{dispatch({type:ADD_TO_CART,product:_objectSpread(_objectSpread({},currentProduct),{},{purchaseQuantity:1})});idbPromise('cart','put',_objectSpread(_objectSpread({},currentProduct),{},{purchaseQuantity:1}));}};// remove item with currentProduct._id from cart\nvar removeFromCart=function removeFromCart(){dispatch({type:REMOVE_FROM_CART,_id:currentProduct._id});idbPromise('cart','delete',_objectSpread({},currentProduct));};return/*#__PURE__*/_jsxs(_Fragment,{children:[currentProduct&&cart?/*#__PURE__*/_jsxs(\"div\",{className:\"container my-1\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"\\u23EA Back to Products\"}),/*#__PURE__*/_jsx(\"h2\",{children:currentProduct.name}),/*#__PURE__*/_jsx(\"p\",{children:currentProduct.description}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Price:\"}),\"$\",currentProduct.price,' ',/*#__PURE__*/_jsx(\"button\",{onClick:addToCart,children:\"Add to Cart\"}),/*#__PURE__*/_jsx(\"button\",{disabled:!cart.find(function(p){return p._id===currentProduct._id;}),onClick:removeFromCart,children:\"Remove from Cart\"})]}),/*#__PURE__*/_jsx(\"img\",{src:\"/images/\".concat(currentProduct.image),alt:currentProduct.name,width:\"800\"})]}):null,loading?/*#__PURE__*/_jsx(\"img\",{src:spinner,alt:\"loading\"}):null,/*#__PURE__*/_jsx(Cart,{})]});}export default Detail;","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","useDispatch","useSelector","useQuery","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","ADD_TO_CART","UPDATE_PRODUCTS","QUERY_PRODUCTS","idbPromise","Cart","spinner","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Detail","dispatch","state","_useParams","id","_useState","_useState2","_slicedToArray","currentProduct","setCurrentProduct","products","cart","_useQuery","loading","data","length","find","product","_id","type","forEach","then","indexedProducts","addToCart","itemInCart","cartItem","purchaseQuantity","parseInt","_objectSpread","removeFromCart","children","className","to","name","description","price","onClick","disabled","p","src","concat","image","alt","width"],"sources":["/Users/damnitstiff/Desktop/coding/twelve/client/src/pages/Detail.js"],"sourcesContent":["// import react dependencies\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import apollo dependency\nimport { useQuery } from '@apollo/client';\n\n// import utils dependencies\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\n\n// import component\nimport Cart from '../components/Cart';\n\n// import assset\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const { id } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const { products, cart } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  // if data, loading, or dispatch is updated, update products\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  // update cart quantity if itemInCart exists; otherwise add to cart \n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  // remove item with currentProduct._id from cart\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">‚è™ Back to Products</Link>\n          <h2>{currentProduct.name}</h2>\n          <p>{currentProduct.description}</p>\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n            width=\"800\" \n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}