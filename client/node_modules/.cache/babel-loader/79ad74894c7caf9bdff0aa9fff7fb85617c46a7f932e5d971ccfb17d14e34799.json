{"ast":null,"code":"var _jsxFileName = \"/Users/damnitstiff/Desktop/coding/twelve-temp/client/src/pages/Detail.js\",\n  _s = $RefreshSig$();\n// import react dependencies\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import apollo dependency\nimport { useQuery } from '@apollo/client';\n\n// import utils dependencies\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY, ADD_TO_CART, UPDATE_PRODUCTS } from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\n\n// import component\nimport Cart from '../components/Cart';\n\n// import assset\nimport spinner from '../assets/spinner.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Detail() {\n  _s();\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const {\n    id\n  } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const {\n    products,\n    cart\n  } = state;\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS);\n\n  // if data, loading, or dispatch is updated, update products\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n      data.products.forEach(product => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then(indexedProducts => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  // update cart quantity if itemInCart exists; otherwise add to cart \n  const addToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: {\n          ...currentProduct,\n          purchaseQuantity: 1\n        }\n      });\n      idbPromise('cart', 'put', {\n        ...currentProduct,\n        purchaseQuantity: 1\n      });\n    }\n  };\n\n  // remove item with currentProduct._id from cart\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n    idbPromise('cart', 'delete', {\n      ...currentProduct\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [currentProduct && cart ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-1\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"\\u23EA Back to Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentProduct.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentProduct.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), \"$\", currentProduct.price, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addToCart,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !cart.find(p => p._id === currentProduct._id),\n          onClick: removeFromCart,\n          children: \"Remove from Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/images/${currentProduct.image}`,\n        alt: currentProduct.name,\n        width: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : null, loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: spinner,\n      alt: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Detail, \"rX1YMzHotR0v7uUqBr/+wqLA7pk=\", false, function () {\n  return [useDispatch, useSelector, useParams, useQuery];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","useDispatch","useSelector","useQuery","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","ADD_TO_CART","UPDATE_PRODUCTS","QUERY_PRODUCTS","idbPromise","Cart","spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","Detail","_s","dispatch","state","id","currentProduct","setCurrentProduct","products","cart","loading","data","length","find","product","_id","type","forEach","then","indexedProducts","addToCart","itemInCart","cartItem","purchaseQuantity","parseInt","removeFromCart","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","name","description","price","onClick","disabled","p","src","image","alt","width","_c","$RefreshReg$"],"sources":["/Users/damnitstiff/Desktop/coding/twelve-temp/client/src/pages/Detail.js"],"sourcesContent":["// import react dependencies\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import apollo dependency\nimport { useQuery } from '@apollo/client';\n\n// import utils dependencies\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\n\n// import component\nimport Cart from '../components/Cart';\n\n// import assset\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const { id } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const { products, cart } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  // if data, loading, or dispatch is updated, update products\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  // update cart quantity if itemInCart exists; otherwise add to cart \n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  // remove item with currentProduct._id from cart\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">‚è™ Back to Products</Link>\n          <h2>{currentProduct.name}</h2>\n          <p>{currentProduct.description}</p>\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n            width=\"\"\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}